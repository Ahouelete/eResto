// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
$md-mcgpalette0: (
  50: #fdf0e5,
  100: #fbdabf,
  200: #f8c194,
  300: #f5a869,
  400: #f39649,
  500: #f18329,
  600: #ef7b24,
  700: #ed701f,
  800: #eb6619,
  900: #e7530f,
  A100: #ffffff,
  A200: #ffe8e0,
  A400: #ffc3ad,
  A700: #ffb193,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #000000,
    600: #000000,
    700: #000000,
    800: #000000,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$e-resto-primary: mat.define-palette($md-mcgpalette0);
$e-resto-accent: mat.define-palette($md-mcgpalette0, A200, A100, A400);

// The warn palette is optional (defaults to red).
$e-resto-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$e-resto-theme: mat.define-light-theme(
  (
    color: (
      primary: $e-resto-primary,
      accent: $e-resto-accent,
      warn: $e-resto-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($e-resto-theme);
